sudo: required
services:
- docker
language: python
python:
- '3.6'
before_install:
- docker version
- docker info
install:
- nvm install --lts
- npm install newman
- pip install -r requirements.txt
- pip install -r test-requirements.txt
- pip install nose
- pip install Flask-Testing
before_script:
- node --version
- npm --version
- node_modules/.bin/newman --version
script:
- python -m unittest discover
- docker build -t swagger-spring-example:1.0.0 .
- docker run --name example_api -d -t -p 127.0.0.1:8080:8080 swagger-spring-example:1.0.0
- docker ps
- count=0 && until $(curl --output /dev/null --silent --head --fail http://localhost:8080);
  do printf '.' && sleep 3 && count=$((count+1)) && if [ $count -gt 5 ]; then break;
  fi; done
- docker logs example_api
- node_modules/.bin/newman run tests/postman_collection.json -e tests/postman_environment.json
after_success:
- docker login -u $DOCKER_USER -p $DOCKER_PASS
- docker tag maredp/devops maredp/devops
- docker push maredp/devops
env:
  global:
  - secure: Ygf3pXWKNIhfelLIkh6b3JGcGP5dMLeLut/ake40tZFp/tcUY/W8o8XL9iwJmaqDwN1TWPdL355AxlJHBM6QcEnuzsycGbcMKRdqylcK5kimT0ubpdvGFXKYYW40wMf3bOs7HvfMO8j360bxSKgfQd2vsT1QShYXytQmUl2dCxS0rQuuNamW+KQpKHMUUlis5FOn8OshjMYOzAEcl7auT2O8tgv8KKv/fM81Hr4BVSm6gRVVcu4HFzKr9zW4HNEK56GdL+Na5eqaNscSmO9OOg0iW8eXF0dSl/N+4lQHC0U64Iod1fotz7ovRLDowZyP8I770YjPmIUDZEXiJcEvWxJiEieIEuiTlewTIJ9nxhr7AytT2WU0Tmep7EQV4kkrKfWqOTotNWG/Hlv3dLIFsx/m9hJeE8JGeOZLi4PtfIDvA1QC/DwyNQXVdQBinqlI7AmE4LXThEezZTOX5/ZsDsZSL4uq842hVZgDwu9J1HI+C0a7XRYLbdS4JBlTzQ8hvI6C6AVLp4dgivy9cU+lRU1nNzfcuiml2vpz0zcJ5gOX78+zvB7J0svZg6m8i3cC0+YOCydzYLzwUTLiGneZ7c1J0TTo564gwU1d9wNr2X6qjIK9bCooiuoJvESASiK5yTGIFK+7oekQzJUhBJJmi3VchZiAkQiP6LUw3/A9Am8=
  - secure: KPeTgfR7iP8ro1brqIx8pYhkgMKOg7fHTrM+3JvugAUYW+qM+iwsBC78Fs4GDeUPEg4gB+93gPb6HCFLnBtknjXLaLmymdHez872C8ZWU987SWdWuFpVIX9EpVRhkXg1OIOfrLaoymbVTe0/mDw9kd5bCbJ1bthZd235i8/k9IwwXXTCd6BONaxAT3cYgNjdi+Pm4ttwzq/5EDl6/6D8c3tn7aRFFRjELAPXxEF2SQkfLtdg8ZEOJ9qTaQlA2IlM55gAQhiKEX33v5Dt5oRgdJAA1QoWKG387c8bo15ft01sHa73cqsjYzz+Xc6l5iCsfs7gdv1hlEbVijLopuW7avXxS5v9WMhvaBS00/PO5fJ/yK4AsLqfQCQpqDtCa9SE9+y+HIhN/LoQRcJhjCh0oASG49i48GjmxAokqSlWPUvW2E3giQOET9I7un/3VG0b9mS2G89WmI2P1iE5QpSlboPof+ptA5jFYuRIYlqrYyVFnTilvPSqZqN1FNkyNxBIg2V2SlhnIrbhMrFb/wHY6Q1SvjNhiOzxJJi/uZ8Nlkldm48YPmZSj7+UvtKWgskR57+FaEiwxUkE9OqNWbK2Wur5CVlamzS3EaG/TIPTQ/N0jWo1ALP/g8xm1Lzy77l5m9Ncf/FvXByY37Hhs/lFQXxFMyqfxl9nyB3QRDV2Kec=
